<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAtras.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAAAfCAYAAABwH0oUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABF1JREFUaEPtWUty2kAQZeOywBtukByBI3iZcgRF5QLxEXwDfAN8A/sG5AYcgSNo
        44TPho0NQsZW+rW6xy0xCOFNnEKvqgurpzWeefO61YJGjRr/J6ZB/6uauGqUIWpftmfn3ZtZszueN7tL
        +kxz1gon9DmcBt9qQi1A3LzVG3hJ22PzVve+JpIAEoiQKEcOEfmnGd5BjdPg6hrG10E4tnFiNzLV6WFx
        dtXJqY4ImgbhpQx7kdXE8MEQSGrsDWT4dFBU3jTo3cpQJSzO+h17P9lpKZE27NLxWPIUUCPdzyRCySdT
        E6dB91rJQ20Ttxezi/KnLlJe5yIbi/soJHF88xrHEexlvS4tIZ8CtFFNvShq99vi3gGetBpXRuIMDxgh
        8VAN9UHIS9k2m3tx5/AWx2OMb+lTXP8GVjFQorh3YMjj/q+MaIxp7CFFFwHFOfIyApdpmu78r89E4K1u
        dt8bxjHkKUiFWlMjcVUCFCfkORUipWW4kS6XbYnJxolgXIN4N0aWPD11XpNk+LbZTPA37uXDER8fAMWt
        1+vcnnFY6WYzoPGRxm3X673CQvqOsNF5M5yIK4ePkAfYg0FjLu6DIFKWSpqqDJ8y3Ehpw0xcwRLaZG4M
        xMrfIG672fTdWMFsnQVpvhj4JSQPp5Rgt+DnyCOTHhH10me5+9Fsk4/vWwY/voi7FDhpXTCUkaxWeJjw
        NYHngMokzbON0sZYfVBOgVykN9mI1fiu2AnPnfmYZD2g7fOzIxmEw0dz36rPEu1AxGHzVKu6v8TF+N0K
        +0pARcul6kcINIrj0+aUfF98rrXSWFsDLYFpHA/FzcDmmWiKEZebg4zXbg+QjMuGHhjf66nFpQq0aSg2
        ngfde58tzru5BR9LoN28rXluk5SS4mIcIhApLW6GqW24z6W3GBMoB/beAVAcxY9KayCRxK9hSE9x5VAg
        sbR9sbCtjLhKYdMVCyfDRmC5WibhRxMIImRMHzpITSXLZQ/mIMIezBgbaqBfgdnXVbxRIsvbs32ERCIQ
        X3V5le1DccFeo41L+FEEJkmCepf5feoWAkEQ6qMShfmE6J05Har2bMeQ+Hhxhfdiif1+8J0YytJFvsTx
        Ha6tuY2anpCKfKYo8ummqxCotVFicwp8Wa3u+FrmNHF8Lx4y8O1A6+Ch91dH4oF2hubh1ghW5dtrKEsX
        qQu3sMVdFUTEOmXAcL2PQIB8VuH+Gpjdr2Oof7ZeRr61MZC6umGQI24vkPKl5LXCgc5V9S1EFhrZdLSQ
        4o62JdI0hs+pkAw11KgqKqoFY5hf4/G3HALHk4KzNglxWQ10RCJ2L3kKW/TR/4n7KCwuej91DjJK8xP6
        7SSrhb2s8MNIiVWfuMCi2RvqvVkpOMEfnnZIBBmkxn1Emh+duBnneCIPX65KyGnCprMxfl0DofyKRwot
        jItq6588GY8X/c6eH412DKqr0q6cJKAopOn8nFoTEIp3ZzJc4ym7r/muUaNGjU+JRuMv/FJuDrXtvk4A
        AAAASUVORK5CYII=
</value>
  </data>
</root>